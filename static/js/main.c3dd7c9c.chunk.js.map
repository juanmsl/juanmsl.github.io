{"version":3,"sources":["shared/components/navbar/index.js","shared/components/footer/index.js","shared/components/image/index.js","shared/components/section/index.js","shared/components/title/index.js","shared/components/link-to/index.js","shared/components/subtitle/index.js","shared/components/social-networks/index.js","pages/index.js","shared/service-worker/index.js","index.js"],"names":["Navbar","className","src","React","Component","Footer","center","dark","Image","otherProps","process","alt","Section","props","children","main","navbar","blue_full","full","Title","LinkTo","to","href","target","rel","Subtitle","SocialNetworks","App","ServiceWorker","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","then","console","log","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","message","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3dd7c9c.chunk.js","sourcesContent":["import React from \"react\";\nimport './index.scss';\nimport {Image, SocialNetworks} from \"shared/components\";\n\n\nclass Navbar extends React.Component {\n    render() {\n        return (\n            <nav className='navbar'>\n                <Image src='icons/octopus.svg' />\n                <section className='grid navbar__pages'>\n                    <span className='navbar__pages__item'>Home</span>\n                    <span className='navbar__pages__item'>About</span>\n                    <span className='navbar__pages__item'>Services</span>\n                    <span className='navbar__pages__item'>Portfolio</span>\n                    <span className='navbar__pages__item'>Blog</span>\n                </section>\n                <SocialNetworks />\n            </nav>\n        );\n    }\n}\n\nexport default Navbar","import React from \"react\";\nimport './index.scss';\nimport {SocialNetworks, Subtitle} from \"shared/components\";\n\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <footer className='footer'>\n                <section className='footer__box'>\n                    <Subtitle center>Contact me</Subtitle>\n                    <SocialNetworks dark />\n                </section>\n                <p className='footer__copyright'>© Copyright 2020 - All Rights Reserved</p>\n            </footer>\n        );\n    }\n}\n\nexport default Footer","import React from \"react\";\n\n\nconst Image = ({src, ...otherProps}) => {\n    return <img src={`${process.env.PUBLIC_URL}/assets/images/${src}`} alt=\"react\" {...otherProps} />;\n};\n\nexport default Image;","import React from \"react\";\nimport './index.scss';\n\n\nconst Section = (props) => {\n\n    const {children, main, navbar, blue_full, full} = props;\n\n    return (\n        <section className={`page-section grid ${!!main && 'main'} ${navbar && 'navbar'} ${blue_full && 'blue-full'} ${full && 'full'}`}>\n            {children}\n        </section>\n    );\n};\n\nexport default Section;","import React from \"react\";\nimport './index.scss';\n\n\nconst Title = ({children, center}) => (\n    <h2 className={`title ${center && 'center'}`}>{children}</h2>\n);\n\nexport default Title;","import React from \"react\";\n\nconst LinkTo = ({to, children}) => (\n    <a href={to} target='_blank' rel=\"noopener noreferrer\">{children}</a>\n);\n\nexport default LinkTo;","import React from \"react\";\nimport './index.scss';\n\n\nconst Subtitle = ({children, center}) => (\n    <h3 className={`subtitle ${center && 'center'}`}>{children}</h3>\n);\n\nexport default Subtitle;","import React from \"react\";\nimport './index.scss';\nimport {Image, LinkTo} from \"shared/components\";\n\n\nconst SocialNetworks = ({dark}) => (\n    <section className={`grid networks ${dark && 'dark'}`}>\n        <LinkTo to='https://www.linkedin.com/in/juanmsl/'><Image src={`icons/linkedin${dark ? '_dark' : ''}.svg`} className='networks__item'/></LinkTo>\n        <LinkTo to='https://github.com/juanmsl'><Image src={`icons/github${dark ? '_dark' : ''}.svg`} className='networks__item'/></LinkTo>\n        <LinkTo to='https://codepen.io/juanmsl'><Image src={`icons/codepen${dark ? '_dark' : ''}.svg`} className='networks__item'/></LinkTo>\n        <LinkTo to='mailto:juanmsl_pk@hotmail.com'><Image src={`icons/email${dark ? '_dark' : ''}.svg`} className='networks__item'/></LinkTo>\n    </section>\n);\n\nexport default SocialNetworks;","import React from 'react';\nimport {Image, Navbar, Section, Footer, Title} from \"shared/components\";\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <main>\n                <Section main navbar>\n                    <Navbar/>\n                    <section>\n                        <h4>Wellcome, I’m</h4>\n                        <h1>Juan Manuel Sánchez</h1>\n                        <h3>Fullstack developer</h3>\n                        <p>I’m a web developer who is passionate about what I do, programming and design, both of them are my hobbies and my livelihood, making things functional and visually attractive are some of my priorities.</p>\n                    </section>\n                    <Image src='photo.svg'/>\n                </Section>\n                <Section>\n                    <Image src='proffesional_skills.svg' />\n                    <section>\n                        <Title>Proffesional Skills</Title>\n                        <p>I love what I do, and I’m constantly improving my knowledge and skills to be better each day.</p>\n                    </section>\n                </Section>\n                <Section>\n                    <section>\n                        <Title>My Experience</Title>\n                    </section>\n                    <Image src='my_experience.svg' />\n                </Section>\n                <Section blue_full>\n                    <Image src='services.svg' />\n                    <section>\n                        <Title>What I can do for you</Title>\n                    </section>\n                </Section>\n                <Section full>\n                    <Title>My Portfolio</Title>\n                </Section>\n                <Footer />\n            </main>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nclass ServiceWorker {\n\n    static isLocalhost = () => Boolean(\n        window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n    );\n\n    static register = (config) => {\n        if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n            // The URL constructor is available in all browsers that support SW.\n            const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n            if (publicUrl.origin !== window.location.origin) {\n                // Our service worker won't work if PUBLIC_URL is on a different origin\n                // from what our page is served on. This might happen if a CDN is used to\n                // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n                return;\n            }\n\n            window.addEventListener('load', () => {\n                const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n                if (ServiceWorker.isLocalhost()) {\n                    // This is running on localhost. Let's check if a service worker still exists or not.\n                    ServiceWorker.checkValidServiceWorker(swUrl, config);\n\n                    // Add some additional logging to localhost, pointing developers to the\n                    // service worker/PWA documentation.\n                    navigator.serviceWorker.ready.then(() => {\n                        console.log(\n                            'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                        );\n                    });\n                } else {\n                    // Is not localhost. Just register service worker\n                    ServiceWorker.registerValidSW(swUrl, config);\n                }\n            });\n        }\n    };\n\n    static registerValidSW = (swUrl, config) => {\n        navigator.serviceWorker\n            .register(swUrl)\n            .then(registration => {\n                registration.onupdatefound = () => {\n                    const installingWorker = registration.installing;\n                    if (installingWorker == null) {\n                        return;\n                    }\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === 'installed') {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the updated precached content has been fetched,\n                                // but the previous service worker will still serve the older\n                                // content until all client tabs are closed.\n                                console.log(\n                                    'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                                );\n\n                                // Execute callback\n                                if (config && config.onUpdate) {\n                                    config.onUpdate(registration);\n                                }\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // \"Content is cached for offline use.\" message.\n                                console.log('Content is cached for offline use.');\n\n                                // Execute callback\n                                if (config && config.onSuccess) {\n                                    config.onSuccess(registration);\n                                }\n                            }\n                        }\n                    };\n                };\n            })\n            .catch(error => {\n                console.error('Error during service worker registration:', error);\n            });\n    };\n\n    static checkValidServiceWorker = (swUrl, config) => {\n        // Check if the service worker can be found. If it can't reload the page.\n        fetch(swUrl, {\n            headers: {'Service-Worker': 'script'},\n        })\n            .then(response => {\n                // Ensure service worker exists, and that we really are getting a JS file.\n                const contentType = response.headers.get('content-type');\n                if (\n                    response.status === 404 ||\n                    (contentType != null && contentType.indexOf('javascript') === -1)\n                ) {\n                    // No service worker found. Probably a different app. Reload the page.\n                    navigator.serviceWorker.ready.then(registration => {\n                        registration.unregister().then(() => {\n                            window.location.reload();\n                        });\n                    });\n                } else {\n                    // Service worker found. Proceed as normal.\n                    ServiceWorker.registerValidSW(swUrl, config);\n                }\n            })\n            .catch(() => {\n                console.log(\n                    'No internet connection found. App is running in offline mode.'\n                );\n            });\n    };\n\n    static unregister = () => {\n        if ('serviceWorker' in navigator) {\n            navigator.serviceWorker.ready\n                .then(registration => {\n                    registration.unregister();\n                })\n                .catch(error => {\n                    console.error(error.message);\n                });\n        }\n    };\n}\n\nexport default ServiceWorker;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ViewportSize from \"react-viewport-size\";\n\nimport App from 'pages';\nimport ServiceWorker from 'shared/service-worker';\n\nimport 'shared/scss/index.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <ViewportSize />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nServiceWorker.unregister();\n"],"sourceRoot":""}