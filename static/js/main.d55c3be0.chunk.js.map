{"version":3,"sources":["components/atoms/image/index.js","shared/common/service-worker/index.js","shared/common/functions/index.js","components/atoms/section/index.js","components/atoms/title/index.js","components/atoms/link-to/index.js","components/atoms/subtitle/index.js","components/molecules/social-networks/index.js","components/organisms/navbar/index.js","components/organisms/footer/index.js","pages/home/index.js","pages/index.js","index.js"],"names":["Image","src","otherProps","process","alt","ServiceWorker","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","href","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","then","console","log","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","message","renderClasses","classes","Object","keys","filter","key","map","join","Section","props","children","main","navbar","blue_full","full","className","Title","center","LinkTo","to","target","rel","Subtitle","SocialNetworks","dark","data","contact","i","icon","Navbar","renderLinks","pages","name","active","pathname","this","React","Component","withRouter","Footer","Home","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6wCAOeA,EAJD,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,IAAQC,EAAgB,uBACpC,OAAO,uCAAKD,IAAG,UAAKE,GAAL,0BAA6CF,GAAOG,IAAI,SAAYF,K,OCQjFG,E,kCAAAA,EAEKC,YAAc,kBAAMC,QACM,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,4DARNN,EAYKO,SAAW,SAACC,GACf,GAA6C,kBAAmBC,UAAW,CAGvE,GADkB,IAAIC,IAAIZ,GAAwBK,OAAOC,SAASO,MACpDC,SAAWT,OAAOC,SAASQ,OAIrC,OAGJT,OAAOU,iBAAiB,QAAQ,WAC5B,IAAMC,EAAK,UAAMhB,GAAN,sBAEPE,EAAcC,eAEdD,EAAce,wBAAwBD,EAAON,GAI7CC,UAAUO,cAAcC,MAAMC,MAAK,WAC/BC,QAAQC,IACJ,iHAMRpB,EAAcqB,gBAAgBP,EAAON,QAxCnDR,EA8CKqB,gBAAkB,SAACP,EAAON,GAC7BC,UAAUO,cACLT,SAASO,GACTI,MAAK,SAAAI,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBG,QACblB,UAAUO,cAAcY,YAIxBT,QAAQC,IACJ,iHAKAZ,GAAUA,EAAOqB,UACjBrB,EAAOqB,SAASP,KAMpBH,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOsB,WACjBtB,EAAOsB,UAAUR,WAOxCS,OAAM,SAAAC,GACHb,QAAQa,MAAM,4CAA6CA,OAtFrEhC,EA0FKe,wBAA0B,SAACD,EAAON,GAErCyB,MAAMnB,EAAO,CACToB,QAAS,CAAC,iBAAkB,YAE3BhB,MAAK,SAAAiB,GAEF,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEjB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C9B,UAAUO,cAAcC,MAAMC,MAAK,SAAAI,GAC/BA,EAAakB,aAAatB,MAAK,WAC3Bf,OAAOC,SAASqC,eAKxBzC,EAAcqB,gBAAgBP,EAAON,MAG5CuB,OAAM,WACHZ,QAAQC,IACJ,qEAnHdpB,EAwHKwC,WAAa,WACZ,kBAAmB/B,WACnBA,UAAUO,cAAcC,MACnBC,MAAK,SAAAI,GACFA,EAAakB,gBAEhBT,OAAM,SAAAC,GACHb,QAAQa,MAAMA,EAAMU,aAMzB1C,QC/IF2C,EAAgB,SAACC,GAAD,OACzBC,OAAOC,KAAKF,GAASG,QAAO,SAAAC,GAAG,OAC3BJ,EAAQI,MACTC,KAAI,SAAAD,GAAG,OAAIA,KAAKE,KAAK,MCmBbC,EApBC,SAACC,GAAW,IAEjBC,EAA2CD,EAA3CC,SAEDT,EAAU,CACZ,gBAAgB,EAChB,MAAQ,EACR,OAL8CQ,EAAjCE,KAMb,gBAN8CF,EAA3BG,OAOnB,cAP8CH,EAAnBI,UAQ3B,OAR8CJ,EAARK,MAW1C,OACI,6BAASC,UAAWf,EAAcC,IAC7BS,ICZEM,EAJD,SAAC,GAAD,IAAEN,EAAF,EAAEA,SAAUO,EAAZ,EAAYA,OAAZ,OACV,wBAAIF,UAAS,gBAAWE,GAAU,WAAaP,ICEpCQ,EAJA,SAAC,GAAD,IAAEC,EAAF,EAAEA,GAAIT,EAAN,EAAMA,SAAN,OACX,uBAAG1C,KAAMmD,EAAIC,OAAO,SAASC,IAAI,uBAAuBX,ICI7CY,EAJE,SAAC,GAAD,IAAEZ,EAAF,EAAEA,SAAUO,EAAZ,EAAYA,OAAZ,OACb,wBAAIF,UAAS,mBAAcE,GAAU,WAAaP,I,QCiBvCa,EAhBQ,SAAC,GAAY,IAAXC,EAAU,EAAVA,KASrB,OACI,6BAAST,UAAS,wBAAmBS,GAAQ,SAC5BC,EAAKC,QAThBpB,KAAI,WAAaqB,GAAb,IAAER,EAAF,EAAEA,GAAIS,EAAN,EAAMA,KAAN,OACN,kBAAC,EAAD,CAAQT,GAAIA,EAAId,IAAKsB,GACjB,kBAAC,EAAD,CAAO1E,IAAG,gBAAW2E,GAAX,OAAkBJ,EAAO,QAAU,GAAnC,QAA6CT,UAAU,yB,sBCF3Ec,E,4MACFC,YAAc,SAACC,GAAD,OACVA,EAAMzB,KAAI,WAAaqB,GAAO,IAAlBK,EAAiB,EAAjBA,KAAMb,EAAW,EAAXA,GAGRlB,EAAU,CACZ,qBAAuB,EACvBgC,OAJe,EAAKxB,MAAMhD,SAAvByE,WAIkBf,GAGzB,OACI,kBAAC,IAAD,CACIA,GAAIA,EACJd,IAAKsB,EACLZ,UAAWf,EAAcC,IAExB+B,O,uDAOb,OACI,yBAAKjB,UAAU,UACX,kBAAC,EAAD,CAAO9D,IAAI,oBAAoB8D,UAAU,iBACzC,6BAASA,UAAU,sBACdoB,KAAKL,YAAYL,EAAKM,QAE3B,kBAAC,EAAD,W,GA7BKK,IAAMC,WAmCZC,cAAWT,GCxBXU,E,uKAZP,OACI,4BAAQxB,UAAU,UACd,6BAASA,UAAU,eACf,kBAAC,EAAD,CAAUE,QAAM,GAAhB,cACA,kBAAC,EAAD,CAAgBO,MAAI,KAExB,uBAAGT,UAAU,qBAAb,kD,GARKqB,IAAMC,WCwCZG,EAxCF,kBACT,8BACI,kBAAC,EAAD,CAAS7B,MAAI,EAACC,QAAM,GAChB,kBAAC,EAAD,MACA,iCACI,iDACA,sDACA,mDACA,8OAIJ,kBAAC,EAAD,CAAO3D,IAAI,wBAEf,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAOA,IAAI,qCACX,iCACI,kBAAC,EAAD,4BACA,mIAGR,kBAAC,EAAD,KACI,iCACI,kBAAC,EAAD,uBAEJ,kBAAC,EAAD,CAAOA,IAAI,gCAEf,kBAAC,EAAD,CAAS4D,WAAS,GACd,kBAAC,EAAD,CAAO5D,IAAI,0BACX,iCACI,kBAAC,EAAD,gCAGR,kBAAC,EAAD,CAAS6D,MAAI,GACT,kBAAC,EAAD,sBAEJ,kBAAC,EAAD,QC3BO2B,EARH,kBACR,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GAAEH,M,MCEnCI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,OAEFC,SAASC,eAAe,SAG1B3F,EAAcwC,e","file":"static/js/main.d55c3be0.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Image = ({src, ...otherProps}) => {\n    return <img src={`${process.env.PUBLIC_URL}/assets/images/${src}`} alt=\"react\" {...otherProps} />;\n};\n\nexport default Image;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nclass ServiceWorker {\n\n    static isLocalhost = () => Boolean(\n        window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n    );\n\n    static register = (config) => {\n        if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n            // The URL constructor is available in all browsers that support SW.\n            const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n            if (publicUrl.origin !== window.location.origin) {\n                // Our service worker won't work if PUBLIC_URL is on a different origin\n                // from what our page is served on. This might happen if a CDN is used to\n                // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n                return;\n            }\n\n            window.addEventListener('load', () => {\n                const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n                if (ServiceWorker.isLocalhost()) {\n                    // This is running on localhost. Let's check if a service worker still exists or not.\n                    ServiceWorker.checkValidServiceWorker(swUrl, config);\n\n                    // Add some additional logging to localhost, pointing developers to the\n                    // service worker/PWA documentation.\n                    navigator.serviceWorker.ready.then(() => {\n                        console.log(\n                            'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                        );\n                    });\n                } else {\n                    // Is not localhost. Just register service worker\n                    ServiceWorker.registerValidSW(swUrl, config);\n                }\n            });\n        }\n    };\n\n    static registerValidSW = (swUrl, config) => {\n        navigator.serviceWorker\n            .register(swUrl)\n            .then(registration => {\n                registration.onupdatefound = () => {\n                    const installingWorker = registration.installing;\n                    if (installingWorker == null) {\n                        return;\n                    }\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === 'installed') {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the updated precached content has been fetched,\n                                // but the previous service worker will still serve the older\n                                // content until all client tabs are closed.\n                                console.log(\n                                    'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                                );\n\n                                // Execute callback\n                                if (config && config.onUpdate) {\n                                    config.onUpdate(registration);\n                                }\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // \"Content is cached for offline use.\" message.\n                                console.log('Content is cached for offline use.');\n\n                                // Execute callback\n                                if (config && config.onSuccess) {\n                                    config.onSuccess(registration);\n                                }\n                            }\n                        }\n                    };\n                };\n            })\n            .catch(error => {\n                console.error('Error during service worker registration:', error);\n            });\n    };\n\n    static checkValidServiceWorker = (swUrl, config) => {\n        // Check if the service worker can be found. If it can't reload the page.\n        fetch(swUrl, {\n            headers: {'Service-Worker': 'script'},\n        })\n            .then(response => {\n                // Ensure service worker exists, and that we really are getting a JS file.\n                const contentType = response.headers.get('content-type');\n                if (\n                    response.status === 404 ||\n                    (contentType != null && contentType.indexOf('javascript') === -1)\n                ) {\n                    // No service worker found. Probably a different app. Reload the page.\n                    navigator.serviceWorker.ready.then(registration => {\n                        registration.unregister().then(() => {\n                            window.location.reload();\n                        });\n                    });\n                } else {\n                    // Service worker found. Proceed as normal.\n                    ServiceWorker.registerValidSW(swUrl, config);\n                }\n            })\n            .catch(() => {\n                console.log(\n                    'No internet connection found. App is running in offline mode.'\n                );\n            });\n    };\n\n    static unregister = () => {\n        if ('serviceWorker' in navigator) {\n            navigator.serviceWorker.ready\n                .then(registration => {\n                    registration.unregister();\n                })\n                .catch(error => {\n                    console.error(error.message);\n                });\n        }\n    };\n}\n\nexport default ServiceWorker;\n","\n\nexport const renderClasses = (classes) => (\n    Object.keys(classes).filter(key => (\n        classes[key]\n    )).map(key => key).join(\" \")\n);\n","import React from \"react\";\nimport {renderClasses} from \"shared/common\";\n\n\nconst Section = (props) => {\n\n    const {children, main, navbar, blue_full, full} = props;\n\n    const classes = {\n        'page-section': true,\n        'grid': true,\n        'main': !!main,\n        'with-navbar': !!navbar,\n        'blue-full': !!blue_full,\n        'full': !!full,\n    };\n\n    return (\n        <section className={renderClasses(classes)}>\n            {children}\n        </section>\n    );\n};\n\nexport default Section;","import React from \"react\";\n\n\nconst Title = ({children, center}) => (\n    <h2 className={`title ${center && 'center'}`}>{children}</h2>\n);\n\nexport default Title;","import React from \"react\";\n\nconst LinkTo = ({to, children}) => (\n    <a href={to} target='_blank' rel=\"noopener noreferrer\">{children}</a>\n);\n\nexport default LinkTo;","import React from \"react\";\n\n\nconst Subtitle = ({children, center}) => (\n    <h3 className={`subtitle ${center && 'center'}`}>{children}</h3>\n);\n\nexport default Subtitle;","import React from \"react\";\nimport {Image, LinkTo} from \"components\";\nimport data from 'data';\n\n\nconst SocialNetworks = ({dark}) => {\n    const renderItems = (items) => (\n        items.map(({to, icon}, i) => (\n            <LinkTo to={to} key={i}>\n                <Image src={`icons/${icon}${dark ? '_dark' : ''}.svg`} className='networks__item'/>\n            </LinkTo>\n        ))\n    );\n\n    return (\n        <section className={`grid networks ${dark && 'dark'}`}>\n            {renderItems(data.contact)}\n        </section>\n    );\n};\n\nexport default SocialNetworks;","import React from \"react\";\nimport {Image, SocialNetworks} from \"components\";\nimport data from 'data';\nimport {Link, withRouter} from \"react-router-dom\";\nimport {renderClasses} from \"shared/common/functions\";\n\n\nclass Navbar extends React.Component {\n    renderLinks = (pages) => (\n        pages.map(({name, to}, i) => {\n            const {pathname} = this.props.location;\n\n            const classes = {\n                'navbar__pages__item': true,\n                active: pathname === to\n            };\n\n            return (\n                <Link\n                    to={to}\n                    key={i}\n                    className={renderClasses(classes)}\n                >\n                    {name}\n                </Link>\n            );\n        })\n    );\n\n    render() {\n        return (\n            <nav className='navbar'>\n                <Image src='icons/octopus.svg' className='navbar__logo'/>\n                <section className='grid navbar__pages'>\n                    {this.renderLinks(data.pages)}\n                </section>\n                <SocialNetworks/>\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(Navbar);","import React from \"react\";\nimport {SocialNetworks, Subtitle} from \"components\";\n\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <footer className='footer'>\n                <section className='footer__box'>\n                    <Subtitle center>Contact me</Subtitle>\n                    <SocialNetworks dark />\n                </section>\n                <p className='footer__copyright'>© Copyright 2020 - All Rights Reserved</p>\n            </footer>\n        );\n    }\n}\n\nexport default Footer","import React from 'react';\nimport {Image, Navbar, Section, Footer, Title} from \"components\";\n\n\nconst Home = () => (\n    <main>\n        <Section main navbar>\n            <Navbar/>\n            <section>\n                <h4>Welcome, I’m</h4>\n                <h1>Juan Manuel Sánchez</h1>\n                <h3>FullStack developer</h3>\n                <p>I’m a web developer who is passionate about what I do, programming and design, both of them are my\n                    hobbies and my livelihood, making things functional and visually attractive are some of my\n                    priorities.</p>\n            </section>\n            <Image src='sections/photo.svg'/>\n        </Section>\n        <Section>\n            <Image src='sections/professional_skills.svg'/>\n            <section>\n                <Title>Professional Skills</Title>\n                <p>I love what I do, and I’m constantly improving my knowledge and skills to be better each day.</p>\n            </section>\n        </Section>\n        <Section>\n            <section>\n                <Title>My Experience</Title>\n            </section>\n            <Image src='sections/my_experience.svg'/>\n        </Section>\n        <Section blue_full>\n            <Image src='sections/services.svg'/>\n            <section>\n                <Title>What I can do for you</Title>\n            </section>\n        </Section>\n        <Section full>\n            <Title>My Portfolio</Title>\n        </Section>\n        <Footer/>\n    </main>\n);\n\nexport default Home;","import React from 'react';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Home from \"pages/home\";\n\n\nconst App = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route path='/' exact>{Home}</Route>\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ViewportSize from \"react-viewport-size\";\n\nimport App from 'pages';\nimport {ServiceWorker} from 'shared/common';\n\nimport 'shared/scss/index.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <ViewportSize />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nServiceWorker.unregister();\n"],"sourceRoot":""}